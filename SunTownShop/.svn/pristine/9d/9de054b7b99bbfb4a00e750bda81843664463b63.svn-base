package com.suntown.suntownshop.db;

import java.util.ArrayList;

import com.suntown.suntownshop.model.CartGoods;
import com.suntown.suntownshop.model.ParcelableGoods;
import com.suntown.suntownshop.utils.FileManager;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

public class RouteGoodsDb {
	private static String DB_NAME;
	private final static String TB_NAME = "routegoods";
	private SQLiteDatabase db;
	private String userId;
	private Context context;

	public RouteGoodsDb(Context context, String userId) {
		DB_NAME = FileManager.getDataPath(context) + "/suntownshop.db";
		this.context = context;
		this.userId = userId;
		db = SQLiteDatabase.openOrCreateDatabase(DB_NAME, null);
		db.execSQL("create table if not exists "
				+ TB_NAME
				+ "(_id INTEGER PRIMARY KEY AUTOINCREMENT,barcode VARCHAR,name VARCHAR,sfid VARCHAR,floorname VARCHAR,userid VARCHAR)");
		// 无用户商品挂靠到当前用户下
		if (userId != null && !"".equals(userId)) {
			ContentValues cv = new ContentValues();
			cv.put("userid", userId);
			try {
				db.update(TB_NAME, cv, "userid=? ", new String[] { "" });
			} catch (Exception e) {
				System.out.println("数据库操作错误，更新userid:" + e.getMessage());
				e.printStackTrace();
			}
		}
	}

	/**
	 * 插入一个导航商品
	 * 
	 * @param barCode
	 * @param name
	 * @param sfid
	 * @param floorName
	 */
	public void insertGoods(String barCode, String name, String sfid,
			String floorName) {
		try {

			Cursor c = db.rawQuery("SELECT * FROM " + TB_NAME
					+ " WHERE userid=? and barcode= ?", new String[] { userId,
					barCode });
			if (c.moveToNext()) {
				return;
			}
			c.close();

			db.execSQL("INSERT INTO " + TB_NAME + " VALUES (NULL, ?,?, ?,?,?)",
					new Object[] { barCode, name, sfid, floorName, userId });
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("插入导航商品出错" + e.getMessage());
			e.printStackTrace();
		}
	}

	/**
	 * 取得导航任务中的所有商品
	 * 
	 * @return
	 */
	public ArrayList getAll() {
		ArrayList<ParcelableGoods> goodsList = new ArrayList<ParcelableGoods>();
		Cursor c = db.rawQuery("SELECT * FROM " + TB_NAME + " where userid=?",
				new String[] { userId });
		while (c.moveToNext()) {
			String barCode = c.getString(c.getColumnIndex("barcode"));
			String name = c.getString(c.getColumnIndex("name"));
			String sfid = c.getString(c.getColumnIndex("sfid"));
			String floorName = c.getString(c.getColumnIndex("floorname"));

			ParcelableGoods goods = new ParcelableGoods(barCode, name, sfid,
					floorName);

			goodsList.add(goods);
		}
		c.close();
		return goodsList;
	}

	/**
	 * 清除该用户下的所有导航商品
	 */
	public void clearAll() {
		db.delete(TB_NAME, "userid=?", new String[] { userId });
	}

	/**
	 * 关闭导航任务数据库
	 */
	public void Close() {
		db.close();
	}
}
