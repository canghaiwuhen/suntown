package com.suntown.suntownshop.adapter;

import java.util.ArrayList;

import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.suntown.suntownshop.Constants;
import com.suntown.suntownshop.GoodsDetailActivity;
import com.suntown.suntownshop.R;
import com.suntown.suntownshop.adapter.GoodsListAdapter.GoodsViewHolder;
import com.suntown.suntownshop.db.ShopCartDb;
import com.suntown.suntownshop.listener.OnMoveViewListener;
import com.suntown.suntownshop.model.Goods;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.DataSetObserver;
import android.graphics.Paint;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListAdapter;
import android.widget.TextView;
import android.widget.Toast;

public class GridGoodsListAdapter extends BaseAdapter {
	public ArrayList<Goods> goodsList;
	private Context context;
	private boolean mIsVip = false;
	private String userId;
	private OnMoveViewListener listener;
	/**
	 * imageloader相关
	 */
	DisplayImageOptions options;
	protected ImageLoader imageLoader = ImageLoader.getInstance();

	private void initOptions() {
		options = new DisplayImageOptions.Builder()
				.showImageOnLoading(R.drawable.picture_loading_200x200)
				.showImageForEmptyUri(R.drawable.picture_noimg_200x200)
				.showImageOnFail(R.drawable.picture_holder_200x200)
				.cacheInMemory(true).cacheOnDisk(true).build();
	}

	static class GoodsViewHolder {
		ImageView ivAddinRouter;
		ImageView ivMain;
		TextView tvName;
		TextView tvPrice;
		TextView tvOriPriceSymbol;
		//TextView tvDiscount;
		//ImageView ivPriceType;
		TextView tvCurPrice;
	}

	public GridGoodsListAdapter(Context context, ArrayList<Goods> goodsList) {
		this.context = context;
		this.goodsList = goodsList;
		SharedPreferences mSharedPreferences = context.getSharedPreferences(
				"suntownshop", 0);
		mIsVip = mSharedPreferences.getBoolean("isvip", false);
		userId = mSharedPreferences.getString("userId", "");
		initOptions();
	}

	public void setOnAddToRouterListener(OnMoveViewListener listener){
		this.listener = listener;
	}
	
	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		// TODO Auto-generated method stub
		final GoodsViewHolder holder;
		if (convertView == null) {
			convertView = LayoutInflater.from(context).inflate(
					R.layout.gridlist_goods_item, null);
			holder = new GoodsViewHolder();

			holder.ivAddinRouter = (ImageView) convertView
					.findViewById(R.id.iv_addinrouter);
			holder.ivMain = (ImageView) convertView
					.findViewById(R.id.product_list_listview_cell_imageview);
			holder.tvName = (TextView) convertView
					.findViewById(R.id.product_list_listview_cell_product_name);
			holder.tvPrice = (TextView) convertView
					.findViewById(R.id.product_list_listview_cell_price);
			holder.tvOriPriceSymbol = (TextView) convertView
					.findViewById(R.id.tv_oriprice_symbol);
			//holder.ivPriceType = (ImageView) convertView
			//		.findViewById(R.id.goods_list_pricetype);
			holder.tvCurPrice = (TextView) convertView
					.findViewById(R.id.goods_list_curprice);
			//holder.tvDiscount = (TextView) convertView.findViewById(R.id.tv_discount);
			convertView.setTag(holder);
		} else {
			holder = (GoodsViewHolder) convertView.getTag();
		}

		OnItemClick onItemClick = new OnItemClick(position);
		convertView.setOnClickListener(onItemClick);
		OnAddinCartClick onAddinCartClick = new OnAddinCartClick(position);

		final Goods goods = goodsList.get(position);
		holder.tvName.setText(goods.getName());
		if (goods.getShelfId() == null || goods.getFloorName() == null
				|| "".equals(goods.getShelfId())
				|| "".equals(goods.getFloorName())) {
			holder.ivAddinRouter.setVisibility(View.GONE);
		} else {
			holder.ivAddinRouter.setVisibility(View.VISIBLE);
			holder.ivAddinRouter.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					if (listener != null) {
						listener.onMove(holder.ivMain, goods);
					}
				}
			});
		}

		if (goods.getPriceType() != 0 && goods.getOriPriceInNumc() > 0) {
			double oriPrice = goods.getOriPriceInNumc();
			double curPrice = goods.getCurPrice(mIsVip);
			holder.tvPrice.setText(String.format("%.2f", oriPrice));
			holder.tvOriPriceSymbol.getPaint().setFlags(
					Paint.STRIKE_THRU_TEXT_FLAG);
			holder.tvPrice.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);
			holder.tvPrice.setTextColor(context.getResources().getColor(
					R.color.greyfont));
			// holder.ivPriceType.setVisibility(View.VISIBLE);
			holder.tvCurPrice.setVisibility(View.VISIBLE);
			holder.tvOriPriceSymbol.setVisibility(View.GONE);
			holder.tvPrice.setVisibility(View.VISIBLE);

			holder.tvCurPrice.setText(String.format("%.2f", curPrice));
		/*	double discount = curPrice * 10 / oriPrice;
			if (discount < 10) {
				holder.tvDiscount.setVisibility(View.VISIBLE);
				holder.tvDiscount
						.setText(String.format("%.1f", discount) + "折");
			} else {
				holder.tvDiscount.setVisibility(View.GONE);
			}
			*/
		} else {
			holder.tvCurPrice.setText(String.format("%.2f",
					goods.getCurPrice(mIsVip)));
			holder.tvPrice.getPaint().setFlags(0);
			holder.tvPrice.setTextColor(context.getResources().getColor(
					R.color.btn_color));
			//holder.tvDiscount.setVisibility(View.GONE);
			//holder.ivPriceType.setVisibility(View.GONE);
			holder.tvOriPriceSymbol.setVisibility(View.GONE);
			holder.tvPrice.setVisibility(View.GONE);
		}
		String imgPath = goods.getImgPath();
		if (imgPath != null && imgPath.length() > 0) {
			imageLoader.displayImage("http://" + imgPath, holder.ivMain,
					options);
		} else {
			holder.ivMain.setImageResource(R.drawable.picture_noimg_200x200);
		}
		return convertView;
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return goodsList.get(position);
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return goodsList.size();
	}

	private class OnItemClick implements OnClickListener {
		private int index;

		public OnItemClick(int index) {
			this.index = index;
		}

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			String barCode = goodsList.get(index).getBarCode();
			showGoodsDetail(barCode);
		}

	}

	private class OnAddinCartClick implements OnClickListener {
		private int index;

		public OnAddinCartClick(int index) {
			this.index = index;
		}

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			Goods goods = goodsList.get(index);
			try {
				ShopCartDb scdb = new ShopCartDb(context, userId);
				double curPrice = goods.getCurPrice(mIsVip);

				if (scdb.insertGoods(goods.getBarCode(), goods.getName(),
						goods.getImgPath(), goods.getSpec(), curPrice, 1,goods.getDeliverType())) {
					Toast.makeText(context, "加入购物车成功", Toast.LENGTH_SHORT)
							.show();
				} else {
					Toast.makeText(context, "加入购物车失败", Toast.LENGTH_SHORT)
							.show();
				}
				scdb.Close();
			} catch (Exception e) {
				// TODO: handle exception
				Toast.makeText(context, "ERROR:加入购物车错误" + e.getMessage(),
						Toast.LENGTH_LONG).show();
			}
		}

	}

	/**
	 * 根据条形码跳转到商品详情页
	 * 
	 * @param barCode
	 */
	private void showGoodsDetail(String barCode) {
		Intent intent = new Intent(context, GoodsDetailActivity.class);
		Bundle b = new Bundle();
		b.putString("barCode", barCode);
		intent.putExtras(b);
		context.startActivity(intent);
	}
	
	public interface OnAddToRouterListener{
		public void onAddToRouter(View v);
	}
}
